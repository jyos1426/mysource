<div class="modal modal-center fade" id="modal_dut_list" tabindex="-1" role="dialog" aria-labelledby="my80sizeCenterModalLabel">
    <div class="modal-dialog modal-lg modal-center" role="document">
        <div class="modal-content modal-80size">
            <div class="modal-header" style="background-color:#6ABDC1;">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">×</span></button>
                <h4 class="modal-title">연결 센서 목록</h4>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <button type="button" class="btn btn-default btn-sm" id="btnDutRefresh" title="새로고침" data-toggle="tooltip" data-container="body"><i class="fa fa-refresh"></i></button>
                    <button type="button" class="btn btn-default btn-sm" id="btnDutAdd" title="추가" data-toggle="tooltip" data-container="body"><i class="fa fa-plus"></i></button>
                </div>
                <!-- /.btn-group -->

                <table class="table table_1 table-hover table-striped" id="tblDutList" data-width="100%" data-toggle="table" data-striped="true"
                    data-pagination="false" data-page-size="10" data-page-list="[10, 20, 30, 50]" data-locale="ko-KR" data-show-columns="false"
                    data-search="false" data-show-refresh="false" data-show-toggle="false" data-show-export="false" data-smart-display="false">
                    <thead>
                        <tr class="clickable">
                            <th data-field="status" data-align="center" data-halign="center" data-formatter="fSensorStatus">상태</th>
                            <th data-field="ip" data-align="center">IP</th>
                            <th data-field="port" data-align="center">Port</th>
                            <th data-field="console_id" data-align="center">ID</th>
                            <th data-field="console_passwd" data-align="center" data-visible="false">Password</th>
                            <th data-field="device_id" data-align="center">SSH ID</th>
                            <th data-field="device_port" data-align="center" data-halign="center">SSH Port</th>
                            <th data-field="device_passwd" data-align="center" data-halign="center" data-visible="false">SSH Password</th>
                            <th data-align="center" data-halign="center" data-formatter="fSensorEdit">상세보기</th>
                            <th data-align="center" data-halign="center" data-formatter="fSensorDelete">삭제</th>
                            <th data-field="latest" data-align="left" data-halign="center" data-visible="false">latest</th>
                        </tr>
                    </thead>
                </table>
            </div>
            <div class="modal-footer">
                <button type="button" onclick="setDutInput();" class="col-sm-2 btn btn-success pull-right"><i class="fa fa-check"> 적용</i></button>
            </div>
        </div>
    </div>
</div>

<%- include('../partials/modal-dut-add') -%>    
<%- include('../partials/foot') -%>


<script>
    var $btnDutAdd = $('#btnDutAdd');
    var $btnDutRefresh = $('#btnDutRefresh');

    var $modal_dut_add = $('#modal_dut_add');

    $(function () {
        //$('#btnReloadAudit').click(getDUTList);
        $('#tblDutList').bootstrapTable().on('click-row.bs.table', function (e, row, $element) {
            $('.success').removeClass('success');
            $($element).addClass('success');
        });


        // 테이블 클릭 시 선택한 row의 값을 input 값으로 넘겨준다.
        $("#tblDutList").on("click-row.bs.table", function (field, value) {
            $('input[name=ip]').val(value.ip);
            $('input[name=port]').val(value.port);
            $('input[name=console_id]').val(value.console_id);
            $('input[name=console_passwd]').val(value.console_passwd);
            $('input[name=device_id]').val(value.device_id);
            $('input[name=device_port]').val(value.device_port);
            $('input[name=device_passwd]').val(value.device_passwd);
        });

        // // 추가 버튼을 클릭한다.
        $btnDutAdd.click(showDutAdd);
        // // 새로고침 버튼을 클릭한다.
        $btnDutRefresh.click(getDUTList);


        // $modal_dut_add.find('form').submit(SubmitInsertDut);          
    });

    function dutRefresh() {
        getDUTList();
    }

    function getDUTList() {
        $.ajax({
            url: '/api/dashboards/dashboard/get_dut_list',
            method: 'get',
            dataType: 'json',
            beforeSend: function (xhr) {
                $('#tblDutList').bootstrapTable("showLoading");
            },
            success: function (json) {
                var result = json[0].datas;
                $('#tblDutList').bootstrapTable("load", result);
                $('#tblDutList').bootstrapTable("hideLoading");
                for (var i = 0; i < result.length; i++) {
                    //최근 IVS setting
                    if (result[i].latest == 1) {
                        $('input[name=ip]').val(result[i].ip);
                        $('input[name=port]').val(result[i].port);
                        $('input[name=console_id]').val(result[i].console_id);
                        $('input[name=console_passwd]').val(result[i].console_passwd);
                        $('input[name=device_id]').val(result[i].device_id);
                        $('input[name=device_port]').val(result[i].device_port);
                        $('input[name=device_passwd]').val(result[i].device_passwd);
                        if (result[i].status == 1 && '<%=session.isConnected%>' != 'true') {
                            //session.isConnected == 'true'이면 두번 하게돼서
                            getSensorInfo();
                        }
                        break;
                    }
                }
            },
            error: function (request, status, error) {
            }
        });
    }

    function setDutInput() {
        var index = $('#tblDutList').find('tr.success').data('index');
        var data = $('#tblDutList').bootstrapTable('getData')[index];

        $('.success').removeClass('success');
        $('input[name=ip]').val(data.ip);
        $('input[name=port]').val(data.port);
        $('input[name=console_id]').val(data.console_id);
        $('input[name=console_passwd]').val(data.console_passwd);
        $('input[name=device_id]').val(data.device_id);
        $('input[name=device_port]').val(data.device_port);
        $('input[name=device_passwd]').val(data.device_passwd);

        $('.modal.in').modal('hide');
    }

    function SensorDelete(ip) {
        var param = {
            ip: ip
        };
        var url;

        swal({
            title: '검증 센서 삭제',
            text: '센서를 삭제합니다.',
            type: 'question',
            confirmButtonClass: "btn-danger",
            confirmButtonText: "삭제",
            showCancelButton: true,
            cancelButtonText: '취소'
        }).then(function () {
            $.ajax({
                url: '/api/dashboards/dashboard/delete_dut',
                method: 'get',
                dataType: 'json',
                data: param,
                success: function (result) {
                    getDUTList();
                    // window.location.href= "/dashbards/dashboard/";
                },
                error: function (request, status, error) {
                    handleError(null,null,null,'\nDUT삭제 시 에러가 발생했습니다.');  
                }
            });
        }, function (dismiss) {
            if (dismiss === 'cancel') {}
        });
    }

    // 추가 버튼을 클릭한다.
    function showDutAdd() {

        // data map - init
        $modal_dut_add.find('#input_ip').val('');
        $modal_dut_add.find('#input_port').val('');
        $modal_dut_add.find('#input_console_id').val('');
        $modal_dut_add.find('#input_console_passwd').val('')
        $modal_dut_add.find('#input_device_id').val('')
        $modal_dut_add.find('#input_device_passwd').val('')
        $modal_dut_add.find('#input_device_port').val('');

        // show modal
        $modal_dut_add.modal();
    }

    // 테이블 상세보기 버튼을 클릭한다.
    function ShowDutInfo() {

        // data map - init
        $modal_dut_add.find('#inputID').val('');
        $modal_dut_add.find('#inputAuth').val(2);
        $modal_dut_add.find('#inputName').val('');

        $modal_dut_add.find('#inputPassword').val('')
        $modal_dut_add.find('#inputNewPassword').val('')
        $modal_dut_add.find('#inputConfirm').val('')

        $modal_dut_add.find('#inputAccessIP').val('');
        $modal_dut_add.find('#inputEmail').val('');
        $modal_dut_add.find('#inputDept').val('');
        $modal_dut_add.find('#inputPhone').val('');

        // show modal
        $modal_dut_add.modal();
    }


    function SubmitInsertDut() {
        var ip = $modal_dut_add.find('#input_ip').val();
        var port = $modal_dut_add.find('#input_port').val();
        var console_id = $modal_dut_add.find('#input_console_id').val();
        var console_passwd = $modal_dut_add.find('#input_console_passwd').val();
        var device_id = $modal_dut_add.find('#input_device_id').val();
        var device_passwd = $modal_dut_add.find('#input_device_passwd').val();
        var device_port = $modal_dut_add.find('#input_device_port').val();

        var param = {
            ip: ip,
            port: port,
            console_id: console_id,
            console_passwd: console_passwd,
            device_id: device_id,
            device_passwd: device_passwd,
            device_port: device_port
        };

        $.ajax({
            url: '/api/dashboards/dashboard/insert_dut',
            method: 'get',
            data: param,
            dataType: 'json',
            success: function (result) {
                if (result.message == "SUCCESS_  2000") {
                    getDUTList();
                    $modal_dut_add.find('.close').trigger('click');
                } else {
                    swal("Error", "검증 센서 추가에 실패하였습니다.", "error");
                }
            },
            error: function (request, status, error) {
                swal("Error", "검증 센서 추가에 실패하였습니다.", "error");
            }

        });
    }

    // 검증 센서를 삭제한다.
    function SensorDelete(ip) {
        var param = {
            ip: ip
        };
        var url;

        swal({
            title: '검증 센서 삭제',
            text: '센서(' + ip + ')를 삭제합니다.',
            type: 'question',
            confirmButtonClass: "btn-danger",
            confirmButtonText: "삭제",
            showCancelButton: true,
            cancelButtonText: '취소'
        }).then(function () {
            $.ajax({
                url: '/api/dashboards/dashboard/delete_dut',
                method: 'get',
                dataType: 'json',
                data: param,
                success: function (result) {
                    getDUTList();
                    // window.location.href= "/dashbards/dashboard/";
                },
                error: function (request, status, error) {
                    var msg = "code:" + request.status + "\n" + "error:" +
                        error + "\n" +
                        request.responseText;
                    if (typeof swal !== 'undefined') {
                        swal("Error", msg, "error");
                    } else {
                        alert(msg);
                    }
                    msg = null;
                }
            });
        }, function (dismiss) {
            if (dismiss === 'cancel') {}
        });
    }
</script>